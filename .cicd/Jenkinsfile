@Library("shared-jenkins-library@latest") _

def buildType = isBranchType('release') ? 'release' : 'debug'
def publishable = isBranch('master') || isBranchType('release')

runPipeline(
    nodeLabel: 'TO-MAC-12',
    parameters: [
        choice(name: 'ENVIRONMENT', choices: ['debug','prodc', 'proda']),
    ]
) { cts ->
    stage('Setup and Build') {
        sh '''
        # Source NVM and install or use the specified Node.js version
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
        nvm install 14.17.5 || nvm use 14.17.5

        # Print npm version to verify correct Node.js version is used
        npm -v

        # Run the build script
        ./cicd/scripts/build.sh
        '''
    }

    stage('Build') {
        sh './cicd/scripts/build.sh'
    }

    stage('Archive') {
        steps {
            archiveArtifacts artifacts: '**/build/*.zip', allowEmptyArchive: true
        }
    }
}